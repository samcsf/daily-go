syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.routeguide";
option java_outer_classname = "RouteGuideProto";

package routeguide;

service RouteGuide {
  rpc GetFeature(Point) returns (Feature) {}
  // returns with stream from server
  rpc ListFeatures(Rectangle) returns (stream Feature) {}
  // client sends stream to server
  rpc RecordRoute(stream Point) returns (RouteSummary) {}
  // biddirection streaming RPC, server or client can decide to 
  // wait for all sequences or recv&send immediately
  rpc RouteChat(stream RouteNote) returns (stream RouteNote) {}
}

// define message structure
// 1,2 is something like sequence numebr..
message Point {
  int32 latitude = 1;
  int32 longitude = 2;
}

message Rectangle {
  Point lo = 1;
  Point hi = 2;
}

message Feature {
  string name = 1;
  Point location = 2;
}

message RouteNote {
  Point location = 1;
  string message = 2;
}

message RouteSummary {
  int32 point_count = 1;
  int32 feature_count = 2;
  int32 distance = 3;
  int32 elapse_time = 4;
}
